version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: Establish secure tunnel
          command: |
            SSH_PARAMS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ServerAliveInterval=10"
            ssh $SSH_PARAMS -f -N -L 4443:python.internal.integrateai.net:443 ansible@ansible.integrateai.net
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt --extra-index-url https://localhost:4443 --trusted-host localhost:4443
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest

  build-ami:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli
      - run:
          name: Deploy and Build AMI
          # Connect to Ansible and run deployment
          command: |
            SSH_PARAMS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ServerAliveInterval=10"
            ssh $SSH_PARAMS ansible@ansible.integrateai.net git -C ~ansible/deployment pull origin master
            ssh $SSH_PARAMS ansible@ansible.integrateai.net << EOF
              cd deployment
              python3 deploy.py --direct model-registry $CIRCLE_TAG
            EOF

  deploy-to-s3:
    docker:
      - image: circleci/python:3.6.1
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install awscli
      - run:
          name: Deploy to S3
          command: |
            . venv/bin/activate
            python3 setup.py sdist
            aws s3 cp ~/project/dist/iai-model-registry-*.tar.gz s3://deployment.integrate.ai/python/iai-model-registry/

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test:
          filters:
            tags:
              only:
                - /^beta-.*$/
                - /^release-.*$/
      - build-ami:
          requires:
            - test
          filters:
            tags:
              only:
                - /^beta-.*$/
                - /^release-.*$/
            branches:
              ignore: /.*/
      - deploy-to-s3:
          requires:
            - test
          filters:
            branches:
              only: master
